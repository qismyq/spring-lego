server:
  port: 8081
spring:
  profiles:
    active: company
  datasource:
      url: jdbc:mysql://127.0.0.1:3306/spring_lego?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8&useSSL=true
      username: root
      password: 123456
      driver-class-name: com.mysql.cj.jdbc.Driver
      type: com.alibaba.druid.pool.DruidDataSource    # druid数据库线程池
      ### 连接池配置
      initialSize: 5
      maxActive: 5000
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      druid:
        ## 配置初始化大小、最小、最大
        initial-size: 6
        max-active: 5000
        min-idle: 50
        ## 配置获取连接等待超时的时间
        max-wait: 60000
        ## 配置一个连接在池中最小生存的时间，单位是毫秒
        min-evictable-idle-time-millis: 300000
        ## 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        time-between-eviction-runs-millis: 60000
        remove-abandoned: true
        log-abandoned: true
        remove-abandoned-timeout: 1800
        ## 申请和关闭连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
        test-on-borrow: false
        test-on-return: false
        ## 用来检测连接是否有效的sql
        validation-query: SELECT 1
        ### 配置监控统计拦截的filters，去掉后监控界面sql无法统计(stat)，'wall'用于防火墙（防御sql注入）
        filters: stat,wall
        ## 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=3000
      #执行sql文件  spring某个版本之后需要加上这句，否则不会自动执行sql文件
      #initialization-mode: always
      # schema.sql中一般存放的是建表语句
      # schema: classpath:schema.sql

  redis:
      host: 127.0.0.0
      port: 6379
  #    password:
      database: 15
      lettuce:
        pool:
          max-active: 10240 # 连接池最大连接数（使用负值表示没有限制） 默认 8
          max-wait: -1  # 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
          max-idle: 200   # 连接池中的最大空闲连接 默认 8
          min-idle: 0   # 连接池中的最小空闲连接 默认 0
#  mail:
#      host: smtp.163.com
#      username: chuizikejirizhi@163.com
#      password: chuizikeji999
#      default-encoding: utf-8
#      port: 465
#      properties:
#            mail:
#                debug:
#                    false
#                smtp:
#                    socketFactory:
#                      class: javax.net.ssl.SSLSocketFactory
#      from: chuizikejirizhi@163.com
  ######################################数据源相关配置-end##################################


  ############################mybatis相关配置-start###################################
mybatis-plus:
    mapper-locations: classpath*:mybatis/mapper/*.xml   # 指定mapper的扫描路径
    type-aliases-package: com.springlego.**.domain
    configuration:
      # 自动驼峰命名规则（camel case）映射
      mapUnderscoreToCamelCase: true
      # MyBatis 自动映射策略
      # NONE：不启用 PARTIAL：只对非嵌套 resultMap 自动映射 FULL：对所有 resultMap 自动映射
      autoMappingBehavior: PARTIAL
      # MyBatis 自动映射时未知列或未知属性处理策
      # NONE：不做处理 WARNING：打印相关警告 FAILING：抛出异常和详细信息
      autoMappingUnknownColumnBehavior: NONE
      # 更详细的日志输出 会有性能损耗 org.apache.ibatis.logging.stdout.StdOutImpl
      # 关闭日志记录 (可单纯使用 p6spy 分析) org.apache.ibatis.logging.nologging.NoLoggingImpl
      # 默认日志输出 org.apache.ibatis.logging.slf4j.Slf4jImpl
      logImpl: org.apache.ibatis.logging.nologging.NoLoggingImpl
    global-config:
      db-config:
        logic-delete-value: 1 # 逻辑已删除值(默认为 1)
        logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)

  #mybatis执行sql打印
logging:
    level:
      com.springlego.yunqihuicloud.mapper: info
      # - com.alibaba.nacos.client.naming: error

  ############################mybatis相关配置-end###################################

swagger:
    enable: false
    base:
      package: com.springlego
    path:
      selector:
        regex: /system/user/.*/json|/system/dicdata/.*/json
    api:
      info:
        title: swagger接口文档
        description: 这是一个利用swagger构建的api文档
        url:
        version: 1.0
